<% provide(:title, "Create New Account") %>
<div class="bb-alert alert alert-danger" style="display:none;">
  <span></span>
</div>
<div class="container section">
  <div id="signin" class="col-md-12 text-center">
    <div class="branding">
      <a class="logo" href="/"><img src="https://www.evercam.io/img/logo.png"></a>
    </div>
  </div>
  <div id="registration" class="col-md-4 col-md-offset-4">

    <div class="col-lg-10 col-lg-offset-1 row">
      <h3 class="text-center">Create a Free Account</h3>

      <%= form_for(:user, url: users_path) do |f| %>

          <div class="row text-center">
            <div class="col-lg-3">
              <%= f.label :forename %>
            </div>
            <div class="col-lg-4">
              <%= f.text_field :forename, value: params.fetch('user', {})[:forename] %>
            </div>
          </div>

          <div class="row text-center">
            <div class="col-lg-3">
              <%= f.label :lastname %>
            </div>
            <div class="col-lg-4">
              <%= f.text_field :lastname, value: params.fetch('user', {})[:lastname] %>
              <!-- Plan to join First and Last Name to one Input -->
            </div>
          </div>

          <div class="row text-center">
            <div class="col-lg-3">
              <%= f.label :username %>
            </div>
            <div class="col-lg-4">
              <%= f.text_field :username, value: params.fetch('user', {})[:username] %>
            </div>
          </div>

          <div class="row text-center">
            <div class="col-lg-3">
              <%= f.label :country %>
            </div>
            <div class="col-lg-4">
              <%= select_tag(:country, options_for_select(@countries.map {|c| [c.name, c.iso3166_a2] }, params[:country])) %>
            </div>
          </div>

          <div class="row text-center">
            <div class="col-lg-3">
              <%= f.label :email %>
            </div>
            <div class="col-lg-4">
            <% if @share_request.nil? %>
              <%= f.text_field :email, value: params.fetch('user', {})[:email] %>
            <% else %>
              <%= f.text_field :email, value: @share_request.email, readonly: 'readonly' %>
            <% end %>
            </div>
          </div>

          <div class="row text-center">
            <div class="col-lg-3">
              <%= f.label :password %>
            </div>
            <div class="col-lg-4">
              <%= f.password_field :password, autocomplete: "off" %>
            </div>
          </div>
          <div class="row text-center create">
            <%= f.submit "Create New Account", class: "btn btn-large btn-primary" %>
          </div>
          <div class="row text-center">
            <p class="col-md-12 use">Signing up signifies that you've read and agree to our <a href="http://www.evercam.io/terms" target="blank">Terms of Use</a></p>
          </div>

        <% if @share_request %>
          <input type="hidden" name="key" id="key" value="<%= @share_request.key %>"></input>
        <% end %>
      <% end %>

    </div>

  </div>
  <div class="col-md-4 col-md-offset-4 row text-center create">
    <p>Already have an account? <%= link_to "Sign in", signin_path %></p>
  </div>
</div>
<script>
    //$(window.Evercam.Users.initialize);
    Notification.init(".bb-alert");
    <% flash[:message].try(:each) do |m| %>
    Notification.show('<%= m %>');
    <% end %>

    $(function(){
        $("alert").on("click", function(){
            $("." + $(this).attr("data-hide")).hide();
            /*
             * The snippet above will hide all elements with the class specified in data-hide,
             * i.e: data-hide="alert" will hide all elements with the alert property.
             *
             * Xeon06 provided an alternative solution:
             * $(this).closest("." + $(this).attr("data-hide")).hide();
             * Use this if are using multiple alerts with the same class since it will only find the closest element
             *
             * (From jquery doc: For each element in the set, get the first element that matches the selector by
             * testing the element itself and traversing up through its ancestors in the DOM tree.)
             */
        });
    });
</script>